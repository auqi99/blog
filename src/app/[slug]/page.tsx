import { getEntryBySlug } from "@/libs/contentful";
import { Badge, Box, Container, Image, Text } from "@chakra-ui/react";
import {
  documentToReactComponents,
  Options,
} from "@contentful/rich-text-react-renderer";
import { BLOCKS, Document } from "@contentful/rich-text-types";
import { notFound } from "next/navigation";
import React from "react";
import { format } from "date-fns";
import { Asset } from "contentful";
import { Metadata } from "next";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Slug for Blog Page",
  description: "Generated by create next app",
};


const BlogDetail = async({params}:{params:Promise<{slug:string}>})=> {
  const slug = (await params).slug
 
  const blog = await getEntryBySlug(slug);

  if (!blog) {
    return notFound();
  }

  const RICHTEXT_OPTIONS: Options = {
    renderNode: {
      [BLOCKS.HEADING_2]: (_, children) => (
        <Text fontSize={{ base: "xl", md: "2xl" }} fontWeight="semibold">
          {children}
        </Text>
      ),
      [BLOCKS.PARAGRAPH]: (_, children) => <Text>{children}</Text>,
    },
  };

  return (
    <Container maxW="4xl">
      {typeof blog.category === "string" && (
        <Badge colorScheme="yellow" px="3">
          {blog.category}
        </Badge>
      )}
      {typeof blog.title === "string" && (
        <Text fontSize={{ base: "2xl", md: "3xl" }} fontWeight="semibold">
          {blog.title}
        </Text>
      )}
      <Text fontSize="sm" fontWeight="medium" color="gray.600">
        {typeof blog.createdAt === "string"
          ? format(new Date(blog.createdAt), "yyyy dd MMM")
          : "Unknown Date"}{" "}
        -{" "}
        {typeof blog.author === "string" ? (
          <Link href={`/author/${blog.author.toLowerCase()}`}>
            <Box
              as="span"
              fontWeight="bold"
              color="blue.500"
              _hover={{ textDecoration: "underline", color: "blue.700" }}
              transition="color 0.2s ease-in-out"
            >
              {blog.author}
            </Box>
          </Link>
        ) : (
          "Unknown Author"
        )}
      </Text>

      {blog.thumbnail && typeof blog.thumbnail === "object" ? (
        <Image
          src={`https:${(blog.thumbnail as Asset).fields.file?.url}`}
          w="100%"
          maxH={{ base: "220px", md: "280px" }}
          objectFit="contain"
          alt={typeof blog.title === "string" ? blog.title : "Blog Thumbnail"}
        />
      ) : null}

      <Box mt="5">
        {blog.content && typeof blog.content === "object" ? (
          documentToReactComponents(blog.content as Document, RICHTEXT_OPTIONS)
        ) : (
          <Text>No content available.</Text>
        )}
      </Box>
    </Container>
  );
};

export default BlogDetail;
